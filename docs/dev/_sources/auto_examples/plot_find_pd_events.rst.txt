
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_find_pd_events.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_find_pd_events.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_find_pd_events.py:


======================
Find Photodiode Events
======================
In this example, we use ``pd-parser`` to find photodiode events and
align them to behavior. Then, we save the data to BIDS format.

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: default


    # Authors: Alex Rockhill <aprockhill@mailbox.org>
    #
    # License: BSD (3-clause)








.. GENERATED FROM PYTHON SOURCE LINES 14-19

Simulate data and use it to make a raw object

We'll make an `mne.io.Raw object` so that we can save out some random
data with a photodiode event channel in it in `fif` format (a commonly used
electrophysiology data format).

.. GENERATED FROM PYTHON SOURCE LINES 19-54

.. code-block:: default

    import os.path as op
    import numpy as np

    import mne
    from mne.utils import _TempDir

    import pd_parser
    from pd_parser.parse_pd import _read_raw, _to_tsv

    out_dir = _TempDir()
    print(f'After running this example, you can find the data here: {out_dir}')

    # simulate photodiode data
    n_events = 300
    prop_corrupted = 0.01
    raw, beh, events, corrupted_indices = \
        pd_parser.simulate_pd_data(n_events=n_events,
                                   prop_corrupted=prop_corrupted)

    # make fake electrophysiology data
    info = mne.create_info(['ch1', 'ch2', 'ch3'], raw.info['sfreq'],
                           ['seeg'] * 3)
    raw2 = mne.io.RawArray(np.random.random((3, raw.times.size)) * 1e-6, info)
    raw2.info['lowpass'] = raw.info['lowpass']  # these must match to combine
    raw.add_channels([raw2])
    # bids needs these data fields
    raw.info['dig'] = None
    raw.info['line_freq'] = 60

    fname = op.join(out_dir, 'sub-1_task-mytask_raw.fif')
    raw.save(fname)

    # roundtrip so that raw is properly loaded from disk and has a filename
    raw = _read_raw(fname)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    After running this example, you can find the data here: /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t
    Creating RawArray with float64 data, n_channels=1, n_times=2042106
        Range : 0 ... 2042105 =      0.000 ...  2042.105 secs
    Ready.
    Creating RawArray with float64 data, n_channels=3, n_times=2042106
        Range : 0 ... 2042105 =      0.000 ...  2042.105 secs
    Ready.
    Writing /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/sub-1_task-mytask_raw.fif
    Closing /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/sub-1_task-mytask_raw.fif
    [done]
    Reading in /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/sub-1_task-mytask_raw.fif
    Opening raw data file /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/sub-1_task-mytask_raw.fif...
    Isotrak not found
        Range : 0 ... 2042105 =      0.000 ...  2042.105 secs
    Ready.
    Reading 0 ... 2042105  =      0.000 ...  2042.105 secs...




.. GENERATED FROM PYTHON SOURCE LINES 55-63

Make behavior data

We'll make a dictionary with lists for the events that are time-stamped when
the photodiode was turned on and other events relative to those events.
We'll add some noise to the time-stamps so that we can see how behavior
might look in an experimental setting.
Let's make a task where there is a fixation stimulus, then a go cue,
and a then response as an example.

.. GENERATED FROM PYTHON SOURCE LINES 63-85

.. code-block:: default


    np.random.seed(12)
    # add some noise to make it harder to align, use just over
    # the exclusion of 0.03 to make some events excluded
    offsets = np.random.random(n_events) * 0.035 - 0.0125
    # in this example, the fixation would always be 700 ms
    # after which point a cue would appear which is the "go time"
    go_time = np.repeat(0.7, n_events)
    # let's make the response time between 0.5 and 1.5 seconds uniform random
    response_time = list(go_time + np.random.random(n_events) + 1.5)
    for i in [10, 129, 232, 288]:
        response_time[i] = 'n/a'  # make some no responses


    # put in dictionary to be converted to tsv file
    beh['fix_onset_time'] = beh['time'] + offsets
    beh['go_time'] = go_time
    beh['response_time'] = response_time
    behf = op.join(out_dir, 'sub-1_task-mytask_beh.tsv')
    # save behavior file out
    _to_tsv(behf, beh)








.. GENERATED FROM PYTHON SOURCE LINES 86-93

Use the interactive graphical user interface (GUI) to find parameters

On the documentation webpage, this is example is not interactive,
but if you download it as a jupyter notebook and run it or copy the code
into a console running python (ipython recommended), you can see how to
interact with the photodiode data to pick reasonable parameters by
following the instructions.

.. GENERATED FROM PYTHON SOURCE LINES 93-96

.. code-block:: default


    pd_parser.find_pd_params(raw, pd_ch_names=['pd'])




.. image:: /auto_examples/images/sphx_glr_plot_find_pd_events_001.png
    :alt: Align Use the left/right keys to find an uncorrupted photodiode event and align the onset to the center of the window use +/- to zoom the yaxis in and out (up/down to translate) press enter when finished
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 97-107

Find the photodiode events relative to the behavioral timing of interest

This function will use the default parameters or the parameters you
found from :func:`pd_parser.find_pd_parameters` to find and align the
photodiode events, excluding events that were off because the computer
hung up on computation, for instance. That data is saved in the same folder
as the raw file (in this case, a temperary directory generated by
:func:`_TempDir`). The data can be used directly, or it can be accessed via
:func:`pd_parser.pd_parser_save_to_bids` to store it in the brain imagine
data structure (BIDS) standardized format before using it.

.. GENERATED FROM PYTHON SOURCE LINES 107-110

.. code-block:: default


    pd_parser.parse_pd(raw, beh=beh, pd_ch_names=['pd'], max_len=1.5)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_find_pd_events_002.png
          :alt: Alignment (First 10), Event Differences
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_plot_find_pd_events_003.png
          :alt: Excluded Events, 1 off by 34 ms, 57 none found, 76 off by -30 ms, 96 none found, 97 off by 32 ms, 98 off by -31 ms, 172 none found
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Finding photodiode events
      0%|          | 0/793 [00:00<?, ?it/s]     32%|###2      | 254/793 [00:00<00:00, 2535.21it/s]     73%|#######3  | 581/793 [00:00<00:00, 2715.54it/s]    100%|##########| 793/793 [00:00<00:00, 2938.10it/s]
    299 up-deflection photodiode candidate events found
    Checking best alignments
      0%|          | 0/300 [00:00<?, ?it/s]      1%|          | 2/300 [00:00<00:18, 16.50it/s]      1%|1         | 4/300 [00:00<00:17, 16.53it/s]      2%|2         | 6/300 [00:00<00:17, 16.64it/s]      3%|2         | 8/300 [00:00<00:17, 16.74it/s]      3%|3         | 10/300 [00:00<00:18, 16.07it/s]      4%|4         | 12/300 [00:00<00:17, 16.06it/s]      5%|4         | 14/300 [00:00<00:17, 16.26it/s]      5%|5         | 16/300 [00:00<00:17, 16.39it/s]      6%|6         | 18/300 [00:01<00:17, 16.48it/s]      7%|6         | 20/300 [00:01<00:17, 15.77it/s]      7%|7         | 22/300 [00:01<00:17, 15.88it/s]      8%|8         | 24/300 [00:01<00:17, 16.20it/s]      9%|8         | 26/300 [00:01<00:16, 16.30it/s]      9%|9         | 28/300 [00:01<00:17, 15.90it/s]     10%|#         | 30/300 [00:01<00:16, 16.15it/s]     11%|#         | 32/300 [00:01<00:16, 16.30it/s]     11%|#1        | 34/300 [00:02<00:16, 15.95it/s]     12%|#2        | 36/300 [00:02<00:16, 16.03it/s]     13%|#2        | 38/300 [00:02<00:16, 16.18it/s]     13%|#3        | 40/300 [00:02<00:15, 16.32it/s]     14%|#4        | 42/300 [00:02<00:15, 16.17it/s]     15%|#4        | 44/300 [00:02<00:15, 16.27it/s]     15%|#5        | 46/300 [00:02<00:15, 16.27it/s]     16%|#6        | 48/300 [00:02<00:15, 16.47it/s]     17%|#6        | 50/300 [00:03<00:15, 16.52it/s]     17%|#7        | 52/300 [00:03<00:14, 16.58it/s]     18%|#8        | 54/300 [00:03<00:15, 16.25it/s]     19%|#8        | 56/300 [00:03<00:14, 16.45it/s]     19%|#9        | 58/300 [00:03<00:15, 15.48it/s]     20%|##        | 60/300 [00:03<00:15, 15.71it/s]     21%|##        | 62/300 [00:03<00:17, 13.78it/s]     21%|##1       | 64/300 [00:04<00:16, 14.31it/s]     22%|##2       | 66/300 [00:04<00:15, 15.01it/s]     23%|##2       | 68/300 [00:04<00:15, 15.45it/s]     23%|##3       | 70/300 [00:04<00:14, 15.84it/s]     24%|##4       | 72/300 [00:04<00:14, 16.26it/s]     25%|##4       | 74/300 [00:04<00:13, 16.45it/s]     25%|##5       | 76/300 [00:04<00:13, 16.66it/s]     26%|##6       | 78/300 [00:04<00:13, 16.08it/s]     27%|##6       | 80/300 [00:04<00:13, 16.34it/s]     27%|##7       | 82/300 [00:05<00:13, 16.49it/s]     28%|##8       | 84/300 [00:05<00:13, 16.58it/s]     29%|##8       | 86/300 [00:05<00:12, 16.66it/s]     29%|##9       | 88/300 [00:05<00:12, 16.64it/s]     30%|###       | 90/300 [00:05<00:12, 16.67it/s]     31%|###       | 92/300 [00:05<00:12, 16.60it/s]     31%|###1      | 94/300 [00:05<00:12, 16.51it/s]     32%|###2      | 96/300 [00:05<00:12, 16.35it/s]     33%|###2      | 98/300 [00:06<00:13, 15.35it/s]     33%|###3      | 100/300 [00:06<00:12, 15.68it/s]     34%|###4      | 102/300 [00:06<00:12, 16.01it/s]     35%|###4      | 104/300 [00:06<00:12, 16.16it/s]     35%|###5      | 106/300 [00:06<00:11, 16.37it/s]     36%|###6      | 108/300 [00:06<00:11, 16.28it/s]     37%|###6      | 110/300 [00:06<00:11, 16.34it/s]     37%|###7      | 112/300 [00:06<00:11, 16.30it/s]     38%|###8      | 114/300 [00:07<00:11, 16.33it/s]     39%|###8      | 116/300 [00:07<00:11, 16.37it/s]     39%|###9      | 118/300 [00:07<00:11, 16.37it/s]     40%|####      | 120/300 [00:07<00:10, 16.46it/s]     41%|####      | 122/300 [00:07<00:10, 16.45it/s]     41%|####1     | 124/300 [00:07<00:11, 15.98it/s]     42%|####2     | 126/300 [00:07<00:10, 15.93it/s]     43%|####2     | 128/300 [00:07<00:11, 15.10it/s]     43%|####3     | 130/300 [00:08<00:11, 15.45it/s]     44%|####4     | 132/300 [00:08<00:10, 15.69it/s]     45%|####4     | 134/300 [00:08<00:10, 15.90it/s]     45%|####5     | 136/300 [00:08<00:10, 16.06it/s]     46%|####6     | 138/300 [00:08<00:10, 15.93it/s]     47%|####6     | 140/300 [00:08<00:10, 15.99it/s]     47%|####7     | 142/300 [00:08<00:10, 15.67it/s]     48%|####8     | 144/300 [00:08<00:10, 15.28it/s]     49%|####8     | 146/300 [00:09<00:10, 15.11it/s]     49%|####9     | 148/300 [00:09<00:10, 15.18it/s]     50%|#####     | 150/300 [00:09<00:10, 14.99it/s]     51%|#####     | 152/300 [00:09<00:09, 15.26it/s]     51%|#####1    | 154/300 [00:09<00:09, 15.46it/s]     52%|#####2    | 156/300 [00:09<00:09, 15.55it/s]     53%|#####2    | 158/300 [00:09<00:09, 15.68it/s]     53%|#####3    | 160/300 [00:10<00:08, 15.59it/s]     54%|#####4    | 162/300 [00:10<00:08, 15.69it/s]     55%|#####4    | 164/300 [00:10<00:09, 14.75it/s]     55%|#####5    | 166/300 [00:10<00:10, 12.86it/s]     56%|#####6    | 168/300 [00:10<00:11, 11.27it/s]     57%|#####6    | 170/300 [00:10<00:12, 10.03it/s]     57%|#####7    | 172/300 [00:11<00:14,  8.76it/s]     58%|#####7    | 173/300 [00:11<00:18,  6.77it/s]     58%|#####8    | 174/300 [00:11<00:17,  7.00it/s]     58%|#####8    | 175/300 [00:11<00:17,  6.95it/s]     59%|#####8    | 176/300 [00:11<00:17,  6.90it/s]     59%|#####8    | 177/300 [00:12<00:18,  6.81it/s]     59%|#####9    | 178/300 [00:12<00:18,  6.70it/s]     60%|#####9    | 179/300 [00:12<00:18,  6.61it/s]     60%|######    | 180/300 [00:12<00:16,  7.22it/s]     60%|######    | 181/300 [00:12<00:16,  7.02it/s]     61%|######    | 182/300 [00:12<00:16,  7.09it/s]     61%|######1   | 183/300 [00:12<00:15,  7.48it/s]     61%|######1   | 184/300 [00:13<00:15,  7.31it/s]     62%|######1   | 185/300 [00:13<00:16,  7.19it/s]     62%|######2   | 186/300 [00:13<00:15,  7.20it/s]     63%|######2   | 188/300 [00:13<00:14,  7.85it/s]     63%|######3   | 189/300 [00:13<00:13,  8.31it/s]     64%|######3   | 191/300 [00:13<00:12,  9.06it/s]     64%|######4   | 193/300 [00:13<00:10,  9.91it/s]     65%|######5   | 195/300 [00:14<00:10,  9.92it/s]     66%|######5   | 197/300 [00:14<00:10,  9.73it/s]     66%|######6   | 198/300 [00:14<00:10,  9.74it/s]     66%|######6   | 199/300 [00:14<00:10,  9.66it/s]     67%|######6   | 200/300 [00:14<00:10,  9.68it/s]     67%|######7   | 201/300 [00:14<00:10,  9.73it/s]     67%|######7   | 202/300 [00:14<00:10,  9.63it/s]     68%|######7   | 203/300 [00:15<00:11,  8.69it/s]     68%|######8   | 204/300 [00:15<00:11,  8.61it/s]     69%|######8   | 206/300 [00:15<00:10,  9.12it/s]     69%|######9   | 208/300 [00:15<00:09,  9.41it/s]     70%|#######   | 210/300 [00:15<00:09,  9.70it/s]     71%|#######   | 212/300 [00:15<00:08, 10.26it/s]     71%|#######1  | 214/300 [00:16<00:08, 10.03it/s]     72%|#######2  | 216/300 [00:16<00:08,  9.91it/s]     73%|#######2  | 218/300 [00:16<00:08,  9.77it/s]     73%|#######3  | 219/300 [00:16<00:08,  9.80it/s]     73%|#######3  | 220/300 [00:16<00:08,  9.68it/s]     74%|#######3  | 221/300 [00:16<00:08,  9.65it/s]     74%|#######4  | 223/300 [00:17<00:07,  9.96it/s]     75%|#######5  | 225/300 [00:17<00:06, 10.83it/s]     76%|#######5  | 227/300 [00:17<00:06, 11.88it/s]     76%|#######6  | 229/300 [00:17<00:05, 12.74it/s]     77%|#######7  | 231/300 [00:17<00:05, 13.28it/s]     78%|#######7  | 233/300 [00:17<00:04, 13.85it/s]     78%|#######8  | 235/300 [00:17<00:04, 14.25it/s]     79%|#######9  | 237/300 [00:17<00:04, 14.51it/s]     80%|#######9  | 239/300 [00:18<00:04, 14.79it/s]     80%|########  | 241/300 [00:18<00:03, 14.97it/s]     81%|########1 | 243/300 [00:18<00:03, 15.08it/s]     82%|########1 | 245/300 [00:18<00:03, 15.10it/s]     82%|########2 | 247/300 [00:18<00:03, 15.18it/s]     83%|########2 | 249/300 [00:18<00:03, 15.32it/s]     84%|########3 | 251/300 [00:18<00:03, 15.28it/s]     84%|########4 | 253/300 [00:19<00:03, 15.33it/s]     85%|########5 | 255/300 [00:19<00:02, 15.34it/s]     86%|########5 | 257/300 [00:19<00:02, 15.34it/s]     86%|########6 | 259/300 [00:19<00:02, 15.32it/s]     87%|########7 | 261/300 [00:19<00:02, 15.33it/s]     88%|########7 | 263/300 [00:19<00:02, 15.15it/s]     88%|########8 | 265/300 [00:19<00:02, 15.16it/s]     89%|########9 | 267/300 [00:19<00:02, 15.10it/s]     90%|########9 | 269/300 [00:20<00:02, 15.03it/s]     90%|######### | 271/300 [00:20<00:01, 15.06it/s]     91%|#########1| 273/300 [00:20<00:01, 14.97it/s]     92%|#########1| 275/300 [00:20<00:01, 15.18it/s]     92%|#########2| 277/300 [00:20<00:01, 15.24it/s]     93%|#########3| 279/300 [00:20<00:01, 15.39it/s]     94%|#########3| 281/300 [00:20<00:01, 15.29it/s]     94%|#########4| 283/300 [00:20<00:01, 15.27it/s]     95%|#########5| 285/300 [00:21<00:00, 15.41it/s]     96%|#########5| 287/300 [00:21<00:00, 15.42it/s]     96%|#########6| 289/300 [00:21<00:00, 15.57it/s]     97%|#########7| 291/300 [00:21<00:00, 15.54it/s]     98%|#########7| 293/300 [00:21<00:00, 15.54it/s]     98%|#########8| 295/300 [00:21<00:00, 15.28it/s]     99%|#########9| 297/300 [00:21<00:00, 15.42it/s]    100%|#########9| 299/300 [00:22<00:00, 15.55it/s]    100%|##########| 300/300 [00:22<00:00, 13.59it/s]
    Best alignment is with the first behavioral event shifted 0.00 s relative to the first synchronization event and has errors: min -31.60 ms, q1 -9.87 ms, med 0.17 ms, q3 9.68 ms, max 34.10 ms, 3 missed events
    Excluding events that have zero close synchronization events or more than one synchronization event within `max_len` time
    1 off by 34 ms
    57 none found
    76 off by -30 ms
    96 none found
    97 off by 32 ms
    98 off by -31 ms
    172 none found

    (<Annotations | 293 segments: Fixation (293)>, [12270, 'n/a', 24994, 32081, 38711, 45439, 51458, 58189, 65602, 72878, 79973, 86136, 93477, 100763, 107011, 113960, 119991, 126166, 132641, 138878, 146016, 153243, 159760, 166238, 172405, 178531, 185600, 192499, 198583, 205303, 211906, 219178, 226255, 233158, 239987, 247411, 254891, 261398, 267758, 274953, 281049, 287596, 293701, 300180, 306286, 312721, 319906, 327264, 334453, 341296, 348220, 354762, 361015, 367669, 374768, 380862, 386893, 'n/a', 400499, 407551, 414653, 422052, 428652, 435190, 442400, 449547, 456526, 463742, 470705, 478141, 484642, 491749, 499174, 505676, 512593, 519142, 'n/a', 531947, 537976, 545115, 551794, 558728, 565838, 572466, 579017, 585271, 592462, 599712, 606813, 614126, 621098, 628142, 634432, 641583, 648084, 654741, 'n/a', 'n/a', 'n/a', 681922, 688399, 694726, 701993, 708446, 715103, 721240, 727691, 733820, 740336, 747400, 754861, 761799, 768203, 775188, 782128, 789366, 796167, 803534, 810157, 816586, 823365, 830749, 837835, 844576, 851322, 858295, 864967, 871793, 879250, 886649, 893910, 900101, 906936, 913486, 920854, 927325, 934721, 941079, 947710, 955150, 962043, 969441, 976249, 982591, 989660, 996442, 1003200, 1009405, 1015622, 1023016, 1030450, 1037899, 1044436, 1050505, 1057336, 1064440, 1071412, 1077491, 1083840, 1090899, 1096982, 1104252, 1111736, 1118108, 1124189, 1131659, 1138810, 1145491, 1152208, 1159581, 1166115, 1172195, 'n/a', 1185585, 1192607, 1200029, 1206570, 1212940, 1219019, 1226266, 1232384, 1239812, 1246871, 1254238, 1261460, 1267746, 1274010, 1281452, 1287889, 1295075, 1301331, 1307780, 1314790, 1321163, 1328291, 1335610, 1342091, 1348539, 1354581, 1361215, 1367313, 1374175, 1381207, 1388059, 1394965, 1401864, 1409218, 1416015, 1423307, 1429835, 1436046, 1442379, 1449569, 1455914, 1463073, 1470427, 1477244, 1483459, 1490394, 1496963, 1504326, 1510661, 1517012, 1523736, 1530476, 1536758, 1543320, 1550322, 1557028, 1563118, 1569741, 1576365, 1583036, 1589072, 1595483, 1602909, 1610234, 1617645, 1624783, 1631434, 1638840, 1645291, 1652181, 1659062, 1665723, 1672099, 1678595, 1685559, 1691985, 1698504, 1705035, 1711522, 1718765, 1725584, 1731612, 1738724, 1745477, 1752645, 1759387, 1765853, 1773112, 1779372, 1785789, 1792515, 1799805, 1805978, 1812486, 1819284, 1826302, 1832460, 1839593, 1846428, 1853204, 1859775, 1866247, 1873583, 1881074, 1887337, 1893654, 1900655, 1907802, 1915036, 1921490, 1927804, 1933913, 1940477, 1947321, 1954630, 1960680, 1966814, 1973794, 1980801, 1986987, 1993132, 1999174, 2006147, 2012567, 2018928, 2025925, 2032107])



.. GENERATED FROM PYTHON SOURCE LINES 111-123

Add events relative to the photodiode events

The photodiode is usually sychronized to one event (e.g. the fixation
so that if the deflections caused by the photodiode are large enough
to influence other channels through amplifier interactions it doesn't
cause issues with the analysis) so often the events of interest are
relative to the photodiode event. In the task a timer can be started at the
photodiode event and checked each time a subsequent event occurs.
These events should then be recorded in tsv file, which can be passed to
``pd-parser`` in order to add the events.
Note: if more than one photodiode event is used, the parser can be
used for each event separately using the keyword `add_event=True`.

.. GENERATED FROM PYTHON SOURCE LINES 123-130

.. code-block:: default


    pd_parser.add_relative_events(
        raw, beh,
        relative_event_keys=['go_time', 'response_time'],
        relative_event_names=['Go Cue', 'Response'])






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Overwriting existing file.

    <Annotations | 875 segments: Fixation (293), Go Cue (293), Response (289)>



.. GENERATED FROM PYTHON SOURCE LINES 131-138

Save data to BIDS format

This saves our data to BIDS format so that it's ready to be analyzed in a
reproducible way; BIDS requires all the files the BIDS community has deemed
necessary for analysis, so you should have everything you need to continue
on with an analysis at this point. See https://bids.neuroimaging.io/ and
https://mne.tools/mne-bids/ for more information about BIDS.

.. GENERATED FROM PYTHON SOURCE LINES 138-141

.. code-block:: default


    pd_parser.save_to_bids(op.join(out_dir, 'bids_dir'), fname,
                           sub='1', task='mytask')




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Reading in /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/sub-1_task-mytask_raw.fif
    Opening raw data file /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/sub-1_task-mytask_raw.fif...
    Isotrak not found
        Range : 0 ... 2042105 =      0.000 ...  2042.105 secs
    Ready.
    Used Annotations descriptions: ['Fixation', 'Go Cue', 'Response']
    Opening raw data file /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/sub-1_task-mytask_raw.fif...
    Isotrak not found
        Range : 0 ... 2042105 =      0.000 ...  2042.105 secs
    Ready.

    Writing '/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/README'...

    References
    ----------
    Appelhoff, S., Sanderson, M., Brooks, T., Vliet, M., Quentin, R., Holdgraf, C., Chaumon, M., Mikulan, E., Tavabi, K., Höchenberger, R., Welke, D., Brunner, C., Rockhill, A., Larson, E., Gramfort, A. and Jas, M. (2019). MNE-BIDS: Organizing electrophysiological data into the BIDS format and facilitating their analysis. Journal of Open Source Software 4: (1896). https://doi.org/10.21105/joss.01896

    Holdgraf, C., Appelhoff, S., Bickel, S., Bouchard, K., D'Ambrosio, S., David, O., … Hermes, D. (2019). iEEG-BIDS, extending the Brain Imaging Data Structure specification to human intracranial electrophysiology. Scientific Data, 6, 102. https://doi.org/10.1038/s41597-019-0105-7


    Writing '/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/participants.tsv'...

    participant_id  age     sex     hand
    sub-1   n/a     n/a     n/a

    Writing '/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/participants.json'...

    {
        "participant_id": {
            "Description": "Unique participant identifier"
        },
        "age": {
            "Description": "Age of the participant at time of testing",
            "Units": "years"
        },
        "sex": {
            "Description": "Biological sex of the participant",
            "Levels": {
                "F": "female",
                "M": "male"
            }
        },
        "hand": {
            "Description": "Handedness of the participant",
            "Levels": {
                "R": "right",
                "L": "left",
                "A": "ambidextrous"
            }
        }
    }

    Writing '/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/sub-1/ieeg/sub-1_task-mytask_events.tsv'...

    onset   duration        trial_type      value   sample
    12.27   0.09999942779541016     Fixation        1       12270
    12.97   0.09999942779541016     Go Cue  2       12970
    14.996  0.09999942779541016     Response        3       14996
    24.994  0.10000038146972656     Fixation        1       24994
    25.694  0.10000038146972656     Go Cue  2       25694

    Writing '/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/dataset_description.json'...

    {
        "Name": " ",
        "BIDSVersion": "1.4.0",
        "DatasetType": "raw",
        "Authors": [
            "Please cite MNE-BIDS in your publication before removing this (citations in README)"
        ]
    }

    Writing '/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/sub-1/ieeg/sub-1_task-mytask_ieeg.json'...

    {
        "TaskName": "mytask",
        "Manufacturer": "Elekta",
        "PowerLineFrequency": 60.0,
        "SamplingFrequency": 1000.0,
        "SoftwareFilters": "n/a",
        "RecordingDuration": 2042.105,
        "RecordingType": "continuous",
        "iEEGReference": "n/a",
        "ECOGChannelCount": 0,
        "SEEGChannelCount": 3,
        "EEGChannelCount": 0,
        "EOGChannelCount": 0,
        "ECGChannelCount": 0,
        "EMGChannelCount": 0,
        "MiscChannelCount": 0,
        "TriggerChannelCount": 1
    }

    Writing '/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/sub-1/ieeg/sub-1_task-mytask_channels.tsv'...

    name    type    units   low_cutoff      high_cutoff     description     sampling_frequency      status  status_description
    pd      TRIG    V       0.0     500.0   Trigger 1000.0  bad     n/a
    ch1     SEEG    V       0.0     500.0   StereoEEG       1000.0  good    n/a
    ch2     SEEG    V       0.0     500.0   StereoEEG       1000.0  good    n/a
    ch3     SEEG    V       0.0     500.0   StereoEEG       1000.0  good    n/a
    /Users/alexrockhill/projects/mne-bids/mne_bids/write.py:1352: RuntimeWarning: Converting data files to BrainVision format
      warn('Converting data files to BrainVision format')

    Writing '/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/sub-1/sub-1_scans.tsv'...

    filename        acq_time
    ieeg/sub-1_task-mytask_ieeg.vhdr        n/a
    Wrote /var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir/sub-1/sub-1_scans.tsv entry with ieeg/sub-1_task-mytask_ieeg.vhdr.
    /Users/alexrockhill/projects/mne-bids/mne_bids/path.py:473: RuntimeWarning: Could not locate a data file of a supported format. This is likely a problem with your BIDS dataset. Please run the BIDS validator on your data. (root=/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir, basename=sub-1_task-mytask). []
      warn(msg)
    /Users/alexrockhill/projects/mne-bids/mne_bids/path.py:473: RuntimeWarning: Could not locate a data file of a supported format. This is likely a problem with your BIDS dataset. Please run the BIDS validator on your data. (root=/var/folders/s4/y1vlkn8d70jfw7s8s03m9p540000gn/T/tmp_mne_tempdir_y8j6731t/bids_dir, basename=sub-1_task-mytask). []
      warn(msg)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  31.561 seconds)


.. _sphx_glr_download_auto_examples_plot_find_pd_events.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_find_pd_events.py <plot_find_pd_events.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_find_pd_events.ipynb <plot_find_pd_events.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
